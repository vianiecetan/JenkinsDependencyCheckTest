# Generated by Django 5.0.6 on 2024-06-01 10:22

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activities',
            fields=[
                ('activity_id', models.AutoField(db_column='Activity_ID', primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, db_column='Title', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('price', models.DecimalField(blank=True, db_column='Price', decimal_places=2, max_digits=10, null=True)),
                ('duration', models.IntegerField(blank=True, db_column='Duration', null=True)),
                ('age_restriction', models.IntegerField(blank=True, db_column='Age_Restriction', null=True)),
                ('capacity', models.IntegerField(blank=True, db_column='Capacity', null=True)),
                ('reviews_count', models.IntegerField(blank=True, db_column='Reviews_Count', null=True)),
                ('average_rating', models.DecimalField(blank=True, db_column='Average_Rating', decimal_places=2, max_digits=3, null=True)),
                ('seasonal_tags', models.CharField(blank=True, db_column='Seasonal_Tags', null=True)),
                ('created_at', models.DateTimeField(blank=True, db_column='Created_At', null=True)),
                ('updated_at', models.DateTimeField(blank=True, db_column='Updated_At', null=True)),
            ],
            options={
                'db_table': 'Activities',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ApiAccess',
            fields=[
                ('api_key_id', models.AutoField(db_column='API_Key_ID', primary_key=True, serialize=False)),
                ('api_key', models.CharField(blank=True, db_column='API_Key', null=True, unique=True)),
                ('user_id', models.IntegerField(blank=True, db_column='User_ID', null=True)),
                ('permissions', models.TextField(blank=True, db_column='Permissions', null=True)),
                ('usage_limit', models.IntegerField(blank=True, db_column='Usage_Limit', null=True)),
                ('created_at', models.DateTimeField(blank=True, db_column='Created_At', null=True)),
            ],
            options={
                'db_table': 'API_Access',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuditLogs',
            fields=[
                ('log_id', models.AutoField(db_column='Log_ID', primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, db_column='User_ID', null=True)),
                ('action', models.CharField(blank=True, db_column='Action', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('ip_address', models.CharField(blank=True, db_column='IP_Address', null=True)),
                ('timestamp', models.DateTimeField(blank=True, db_column='Timestamp', null=True)),
            ],
            options={
                'db_table': 'Audit_Logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bookings',
            fields=[
                ('booking_id', models.AutoField(db_column='Booking_ID', primary_key=True, serialize=False)),
                ('booking_date', models.DateField(blank=True, db_column='Booking_Date', null=True)),
                ('booking_status', models.TextField(blank=True, db_column='Booking_Status', null=True)),
                ('participants', models.IntegerField(blank=True, db_column='Participants', null=True)),
                ('total_price', models.DecimalField(blank=True, db_column='Total_Price', decimal_places=2, max_digits=10, null=True)),
                ('special_requests', models.TextField(blank=True, db_column='Special_Requests', null=True)),
                ('created_at', models.DateTimeField(blank=True, db_column='Created_At', null=True)),
            ],
            options={
                'db_table': 'Bookings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('category_id', models.AutoField(db_column='Category_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
            ],
            options={
                'db_table': 'Categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IntegrationLogs',
            fields=[
                ('integration_log_id', models.AutoField(db_column='Integration_Log_ID', primary_key=True, serialize=False)),
                ('endpoint', models.CharField(blank=True, db_column='Endpoint', null=True)),
                ('request', models.TextField(blank=True, db_column='Request', null=True)),
                ('response', models.TextField(blank=True, db_column='Response', null=True)),
                ('timestamp', models.DateTimeField(blank=True, db_column='Timestamp', null=True)),
            ],
            options={
                'db_table': 'Integration_Logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoginAttempts',
            fields=[
                ('attempt_id', models.AutoField(db_column='Attempt_ID', primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, db_column='User_ID', null=True)),
                ('timestamp', models.DateTimeField(blank=True, db_column='Timestamp', null=True)),
                ('ip_address', models.CharField(blank=True, db_column='IP_Address', null=True)),
                ('device', models.CharField(blank=True, db_column='Device', null=True)),
                ('location', models.CharField(blank=True, db_column='Location', null=True)),
                ('risk_level', models.CharField(blank=True, db_column='Risk_Level', null=True)),
            ],
            options={
                'db_table': 'Login_Attempts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MagicLinkTokens',
            fields=[
                ('token_id', models.AutoField(db_column='Token_ID', primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, db_column='User_ID', null=True)),
                ('token', models.CharField(blank=True, db_column='Token', null=True, unique=True)),
                ('created_at', models.DateTimeField(blank=True, db_column='Created_At', null=True)),
                ('is_used', models.BooleanField(blank=True, db_column='Is_Used', null=True)),
            ],
            options={
                'db_table': 'Magic_Link_Tokens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('payment_id', models.AutoField(db_column='Payment_ID', primary_key=True, serialize=False)),
                ('payment_method', models.TextField(blank=True, db_column='Payment_Method', null=True)),
                ('amount', models.DecimalField(blank=True, db_column='Amount', decimal_places=2, max_digits=10, null=True)),
                ('status', models.TextField(blank=True, db_column='Status', null=True)),
                ('transaction_date', models.DateTimeField(blank=True, db_column='Transaction_Date', null=True)),
            ],
            options={
                'db_table': 'Payments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Promotions',
            fields=[
                ('promotion_id', models.AutoField(db_column='Promotion_ID', primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('discount_percentage', models.DecimalField(blank=True, db_column='Discount_Percentage', decimal_places=2, max_digits=5, null=True)),
                ('start_date', models.DateField(blank=True, db_column='Start_Date', null=True)),
                ('end_date', models.DateField(blank=True, db_column='End_Date', null=True)),
            ],
            options={
                'db_table': 'Promotions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('review_id', models.AutoField(db_column='Review_ID', primary_key=True, serialize=False)),
                ('booking_id', models.IntegerField(blank=True, db_column='Booking_ID', null=True)),
                ('user_id', models.IntegerField(blank=True, db_column='User_ID', null=True)),
                ('rating', models.DecimalField(blank=True, db_column='Rating', decimal_places=2, max_digits=3, null=True)),
                ('comment', models.TextField(blank=True, db_column='Comment', null=True)),
                ('created_at', models.DateTimeField(blank=True, db_column='Created_At', null=True)),
            ],
            options={
                'db_table': 'Reviews',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwoFactorAuthentication',
            fields=[
                ('number_2fa_id', models.AutoField(db_column='2FA_ID', primary_key=True, serialize=False)),
                ('number_2fa_method', models.TextField(blank=True, db_column='2FA_Method', null=True)),
                ('number_2fa_status', models.TextField(blank=True, db_column='2FA_Status', null=True)),
                ('created_at', models.DateTimeField(blank=True, db_column='Created_At', null=True)),
            ],
            options={
                'db_table': 'Two_Factor_Authentication',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.AutoField(db_column='User_ID', primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, db_column='Username', null=True, unique=True)),
                ('password_hash', models.CharField(blank=True, db_column='Password_Hash', null=True)),
                ('email', models.CharField(blank=True, db_column='Email', null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, db_column='Phone_Number', null=True)),
                ('role', models.TextField(blank=True, db_column='Role', null=True)),
                ('preferences', models.TextField(blank=True, db_column='Preferences', null=True)),
                ('profile_image_url', models.CharField(blank=True, db_column='Profile_Image_URL', null=True)),
                ('social_media_links', models.TextField(blank=True, db_column='Social_Media_Links', null=True)),
                ('created_at', models.DateTimeField(blank=True, db_column='Created_At', null=True)),
                ('last_login', models.DateTimeField(blank=True, db_column='Last_Login', null=True)),
                ('department', models.CharField(blank=True, db_column='Department', null=True)),
                ('clearance_level', models.IntegerField(blank=True, db_column='Clearance_Level', null=True)),
            ],
            options={
                'db_table': 'Users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vendors',
            fields=[
                ('vendor_id', models.AutoField(db_column='Vendor_ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', null=True)),
                ('contact_info', models.TextField(blank=True, db_column='Contact_Info', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('ratings', models.DecimalField(blank=True, db_column='Ratings', decimal_places=2, max_digits=3, null=True)),
            ],
            options={
                'db_table': 'Vendors',
                'managed': False,
            },
        ),
    ]
